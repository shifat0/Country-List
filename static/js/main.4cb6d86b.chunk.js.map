{"version":3,"sources":["Components/Country/Country.js","App.js","reportWebVitals.js","index.js"],"names":["Country","props","country","name","population","flag","region","addCountries","className","src","alt","onClick","App","useState","countries","setCountries","addedCountries","setAddedCountries","useEffect","fetch","then","response","json","data","newAddCountries","totalPopulation","reduce","length","map","alpha3Code","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAoBeA,EAhBC,SAACC,GACf,MAA2CA,EAAMC,QAAzCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAAYC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,OAC1BC,EAAeN,EAAMM,aAC3B,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKC,IAAKJ,EAAMK,IAAI,SACpB,gDAAmBP,KACnB,sDAAyBC,KACzB,0CAAaE,KAGb,wBAAQK,QAAS,kBAAMJ,EAAaN,EAAMC,UAA1C,+BC+BSU,MA1Cf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAGAC,qBAAU,WACRC,MAAM,wCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIR,EAAaQ,QAC1B,IAGH,IAAIC,EAAkB,EAChBjB,EAAe,SAACL,GACpBsB,EAAe,sBAAOR,GAAP,CAAuBd,IACtCe,EAAkBO,IAIdC,EAAkBT,EAAeU,QACrC,SAACD,EAAiBvB,GAAlB,OACAuB,EAAkBvB,EAAQE,aACxB,GAEJ,OACE,sBAAKI,UAAU,MAAf,UACE,mDAAsBM,EAAUa,UAChC,qBAAInB,UAAU,QAAd,8BAAwCQ,EAAeW,UACvD,qBAAInB,UAAU,QAAd,+BAAyCiB,KAGvCX,EAAUc,KAAI,SAAA1B,GAAO,OAAI,cAAC,EAAD,CACvBA,QAAWA,EACXK,aAAgBA,GACTL,EAAQ2B,mBC3BVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4cb6d86b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Country.css\";\r\n\r\n// Reciving mapping elements through props parameter\r\nconst Country = (props) => {\r\n  const { name, population, flag, region } = props.country;\r\n  const addCountries = props.addCountries;\r\n  return (\r\n    <div className=\"country\">\r\n      <img src={flag} alt=\"Flag\" />\r\n      <h3>Country Name: {name}</h3>\r\n      <h4>Country Population: {population}</h4>\r\n      <h4>Region: {region}</h4>\r\n      {/* inside e.handler we are passing countries those are \r\n            clicked through parameter */}\r\n      <button onClick={() => addCountries(props.country)}>Add Countries</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Country from './Components/Country/Country'\n\nfunction App() {\n  // States\n  const [countries, setCountries] = useState([]); // All 250 countries array\n  const [addedCountries, setAddedCountries] = useState([]) // Which countries we are adding from button\n\n  // Converting Api to JSON\n  useEffect(() => {\n    fetch('https://restcountries.eu/rest/v2/all')\n    .then(response => response.json())\n    .then(data => setCountries(data))\n  } ,[])\n  \n  // Add-Countries button event handler\n  let newAddCountries = 0;\n  const addCountries = (country) => {\n    newAddCountries = [...addedCountries, country];\n    setAddedCountries(newAddCountries);\n  }\n\n  // Added Population\n  const totalPopulation = addedCountries.reduce( \n    (totalPopulation, country) => \n    totalPopulation + country.population \n    , 0)\n\n  return (\n    <div className=\"App\">\n      <h1>Total Countries: {countries.length}</h1>\n      <h3 className=\"title\">Added Countries: {addedCountries.length}</h3>\n      <h3 className=\"title\">Added Population: {totalPopulation}</h3>\n      {\n        // Mapping countries and transfering to Country.js\n        countries.map(country => <Country \n          country = {country}\n          addCountries = {addCountries}\n          key = {country.alpha3Code}\n        />)\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}